buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.jojoldu.book'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    //gradle이 버전업 되면서 compile 명령어가 사라지고 implementation으로 대체됨
    compile('org.springframework.boot:spring-boot-starter-web')
    //implementation('org.springframework.boot:spring-boot-starter-web')
    //testCompile이 버전업 되면서 testCompile 명령어가 사라지고 testImplementation으로 대체됨
    testCompile('org.springframework.boot:spring-boot-starter-test')
    //testImplementation('org.springframework.boot:spring-boot-starter-test')
    /*
    //JUnit4추가
    testImplementation("org.junit.vintage:junit-vintage-engine"){
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }*/

    compile('org.projectlombok:lombok')

    //spring-boot-starter-data-jpa
    //스프링부트용 Spring Data Jpa 추상화 라이브러리
    //스프링부트 버전에 맞춰 자동으로 JPA 관련 라이브러리들의 버전을 관리
    compile('org.springframework.boot:spring-boot-starter-data-jpa')

    //h2
    //인메모리 관계형 데이터베이스
    //별도의 설치가 필요 없이 프로젝트 의존성만으로 관리
    //메모리에서 실행되기 때문에, 애플리케이션을 재시작할 때마다 초기화됨 -> 이 점을 이용해 테스트 용도로 많이 사용
    //이 프로젝트(책)에서는, JPA의 테스트 및 로컬환경에서의 구동에서 사용
    compile('com.h2database:h2')
}